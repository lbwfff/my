library(ggplot2)
library(ggsignif)
library(ggsci)
library(ggpubr)

############1##############
ggplot(data = cor,aes(x=METTL3,y=CAPRIN1))+
  geom_point(shape=21,size=4)+
  stat_smooth(method = lm)+
  stat_cor(data=cor,method='pearson')+
  theme_classic()+
  ggsave(file='METTL3-CAPRIN1-GBM.PDF',width = 10,height = 8)
 #一个简单的散点图加回归线，回归用的简单线性回归分析，平滑线附近的蓝色区域为置信区间

##########1+加强版#############
ggplot(data = TPCOR,aes(x=METTL3,y=TRA2A))+#把癌症组和非癌症组分开统计了
  geom_point(shape=21,size=2)+#把点改为了空心，并放大了一倍，美化了不少
  stat_smooth(method = lm)+
  stat_cor(data=TPCOR,method='pearson')+
  theme_classic()+
  labs(title="TP",subtitle = 'sample size=155')+
  ggsave(file='TP-METTL3-TRA2A-GBM.PDF',width = 10,height = 8)
#有一个问题始终无法解决，就是p值小于2.2e-16后不能显示真实值的问题，现在能找到的办法就是在出图后用pdf编辑器改，p值获得方法如下：
A=TPCOR$MOV10
B=TPCOR$METTL3
C<-cor.test(A,B,method='pearson')
p <- 2* pt(C$statistic,  df = C$parameter, lower.tail=FALSE)#p值在这里得到
#还有一个细节就是平滑线的颜色，可以再考虑一下，出多张图的时候可以使用不同颜色的平滑线。

#############再次加强版##########
C<-cor.test(cor$TRA2A,cor$METTL3,method='pearson')
D<-cor(cor$TRA2A,cor$METTL3,method='pearson')
ptext<-paste0("R=",signif(D,2),',','P=',signif(2* pt(C$statistic, df = C$parameter, lower.tail=FALSE),3))#手动计算了R值和p值
ggplot(data = cor,aes(x=METTL3,y=TRA2A))+
  geom_point(shape=21,size=4)+#把点再加大了一倍
  stat_smooth(method = lm)+
  #stat_cor(data=cor,method='pearson',size=6,p.digits = digits)+
  theme_classic()+
  annotate('text',x=0.7,y=2.1,label='Sample N=109',colour = "black",size=6)+
  annotate('text',x=0.7,y=2.2,label=ptext,colour = "black",size=6)+
  ggsave(file='TOTAL-cor-CAPTAC.PDF',width = 10,height = 8)


##########2###############
forcor<-t(LUADIWANT)
colnames(forcor)=c('MOV10','TRA2A','CAPRIN1','METTL17')
library(corrplot)
M <- cor(forcor)
col1 <- colorRampPalette(c("#7F0000", "red", "#FF7F00", "yellow", "white",
                           "cyan", "#007FFF", "blue","#00007F"))
col2 <- colorRampPalette(c("#67001F", "#B2182B", "#D6604D", "#F4A582",
                           "#FDDBC7", "#FFFFFF", "#D1E5F0", "#92C5DE",
                           "#4393C3", "#2166AC", "#053061"))
col3 <- colorRampPalette(c("red", "white", "blue"))
col4 <- colorRampPalette(c("#7F0000", "red", "#FF7F00", "yellow", "#7FFF7F",
                           "cyan", "#007FFF", "blue", "#00007F"))
wb <- c("white", "black")
corrplot(M, method = "number")
#一个多因素的相关性图，先用cor函数算出因数的相关性矩阵，后进行绘制，能绘制出的种类还挺多的，多因素相关分析可以用

##########3##############
ggplot(try[try$`E-ID`=='MOV10',],aes(group,value,fill=group))+geom_boxplot(width=0.5,outlier.shape = NA)+theme(plot.title=element_text(size = 25),axis.text.x=element_text(size=15,angle=0),axis.text.y=element_text(size=15),axis.title.x=element_text(size = 23),axis.title.y=element_text(size = 23))+labs(title="MOV10",x="group", y = "TPM")+
  theme(panel.grid.major =element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(),axis.line = element_line(colour = "black")) +
  geom_line(aes(group=from) ,size=0.8,colour="gray",alpha = 0.07)+
  scale_fill_npg()+ 
  geom_jitter(aes(fill=group),width =0.2,shape = 21,size=1,colour="black",alpha = 0.04)+
  coord_cartesian(ylim=c(0,50))+
  stat_compare_means(method = "t.test", label.x = 0.7, label.y = 45)+
  scale_fill_brewer(palette="RdBu")+
  ggsave( file='GBM-MOV10-BOXPLOT.pdf', width=10, height=8)

#改了很多版才出的一个箱线图，其实我也还没有太摸清楚要怎么去做。加了连线，加了点点，限制了坐标轴，加了p值，改了颜色，这个配色我觉得会soft一些，但也不知道老板觉得怎么样。

############4###############
dp <- ggplot(try[try$`E-ID`=='MOV10',], aes(x=group, y=value, fill=group))+
  geom_violin(trim=FALSE)+
  scale_fill_npg()+
  geom_line(aes(group=from) ,size=0.8,colour="gray",alpha = 0.07)+
  #geom_jitter(aes(fill=group),width =0.2,shape = 21,size=1,colour="black",alpha = 0.1)+
  geom_boxplot(width=0.1, fill="white",outlier.shape = NA)+
  labs(title="MOV10",x="group", y = "TPM")+
  coord_cartesian(ylim=c(0,80))+
  stat_compare_means(method = "t.test", label.x = 0.7, label.y = 78)
dp + theme_classic()+ scale_fill_brewer(palette="RdBu") + 
  theme_classic()+
  ggsave( file='GBM-MOV10-VIOLINPLOT.pdf', width=10, height=8)
#小提琴图，我一直没想清楚到底要不要点点，所有带点或不带点都做了一版，小提琴里加了箱线，配色延续的上面箱线图的配色，自认为比较soft，但是谁知道呢？
#然后还是存在一些问题，就是颜色和p值，颜色方面如果可以将肿瘤组和正常组进行交换就更好了，但目前为止调色盘什么的要怎么使用我还得自己摸索
#p值的问题我或许可以根据上面线性相关的思路解决，也不好每次都放到excel里面求，但其实两种方法都挺麻烦的，试着去寻找一些更加彻底的方法吧。


##################5#########################还是小提琴图，我也不知道怎么样才是好的，又或许抄的作业才是最好的
dp <- ggplot(mat, aes(x=Grade, y=log2(TRA2A), fill=Grade))+
  geom_violin(trim=FALSE,show.legend=FALSE)+
  geom_jitter(aes(fill=Grade),width =0.2,shape = 21,size=0.6,colour="black",alpha = 0.07)+
  geom_boxplot(width=0.1, fill="white",outlier.shape = NA)+
  labs(y="TRA2A  log2(TPM)",subtitle= 'WHO II N=103
WHO III N=79
WHO IV N=139')+
  #theme(axis.title.x = element_text(size = 15, family = "myFont", color = "green", face = "bold", vjust = 0.5, hjust = 0.5, angle = 45))+
  stat_compare_means(method = "anova",label.x = 0.7,size=5)
dp + theme_classic()+ scale_fill_brewer(palette="Blues") + 
  theme(legend.position = "none")+
  theme(axis.text=element_text(size=12),
         axis.title=element_text(size=16))+
  ggsave( file='CGGA325-GRADE-TRA2A.pdf', width=8, height=7)
 
#############终极小提琴###################
cols<-c('#36537155', "#96345A74")#从他人图上选取的颜色，效果还不错所以一直在用
pal<-colorRampPalette(cols)
image(x=1:20,y=1,z=as.matrix(1:20),col=pal(20))
image(x=1:20,y=1,z=as.matrix(1:20),col=pal(4))
image(x=1:20,y=1,z=as.matrix(1:20),col=pal(2))

colors  = pal(4)#根据数据的分组情况选择渐变吧

library(ggpubr)
ptext<-paste0("Anova, p=",compare_means(value~class,exp,method = "anova")[[3]])
dat_text <- data.frame(label = ptext)#手动算出p值
dp <- ggplot(exp, aes(x=class, y=log2(value)))+
               geom_violin(aes(colour=class),fill='#DDDDDD50',trim=FALSE,show.legend=FALSE,size=0.7)+
               geom_jitter(aes(fill=class),width =0.2,shape = 21,size=4,colour='NA',alpha = 0.4)+
               geom_boxplot(fill='white',width=0.12,,outlier.shape = NA,size=0.8)+
               labs(y="TRA2A  log2(TPM)")
             #stat_compare_means(label.x = 0.7,size=5)#这一句还是保留了
dp + theme_classic(base_size = 22)+ 
               scale_colour_manual(values=c(colors))+
               scale_fill_manual(values=c(colors))+
               theme(legend.position = "none")+
               theme(axis.text=element_text(size=18),
                     axis.title=element_text(size=22))+
               annotate('text',x=1.1,y=8,label=dat_text,colour = "black",size=6)+
               annotate('text',x=1.1,y=9,label='Normal N=20
WHO II N=103
WHO III N=79
WHO IV N=139',colour = "black",size=6)+
               ggsave( file='CGGA-TRA2A.pdf', width=8, height=7)
  
  #############自定义的调色盘#########
cols<-c("#A9A9A9", "#ff8C00", "#00BFFF")#自己选择的颜色
pal<-colorRampPalette(cols)
image(x=1:20,y=1,z=as.matrix(1:20),col=pal(20))#审阅不同颜色渐变的划分程度
image(x=1:20,y=1,z=as.matrix(1:20),col=pal(3))
colors = pal(3)#赋值到colors后就可以直接用了，例如以下
p+scale_fill_manual(values=c(colors))

############怎么copy一个颜色############
截图，使用windows画图软件，颜色选取器，编辑颜色，得RGB值
rgb(red=170, green=197, blue=226, alpha=255, max=255)#得颜色编号


#############绘图代码应该多记录，因为一时的懒散而要花费更多的精力显得有点呆######
#############这是一个横向的柱状图，我还挺喜欢的没用来代替一直想画却没有好效果的饼图####
#############但是想用这个画cellline还是很丑######
library(scales)
platform<-platform[order(platform$Freq,decreasing = T),]
platform$Var1<-as.factor(platform$Var1)

pdf("platform-type3.pdf",width = 8,height = 6)
ggplot(data = platform, aes(x = reorder(Var1,-Freq), y = Freq)) + #####这里有一个reorder函数，可以对元素进行排序，这里使用y轴值进行了重新排列
  geom_col(aes(fill = Var1) , show.legend = FALSE) +
  ggtitle(paste("Platform")) +
  coord_flip() +
  theme_classic()+ ###把背景格抹掉
  geom_label(aes(label = paste(Freq, percent(Freq/sum(Freq)), sep = "\n"),
                 y = -20, fill = Var1),
             show.legend = FALSE,
             size = 3, label.padding = unit(0.1, "lines")) +
  expand_limits(y = -20) +
  labs(y="Frequency",x='Platform')+
  scale_fill_brewer(palette = "Set3", direction = -1) 
dev.off()

############plotly是个很有意思的东西，可以做一些互动交互的图，还挺厉害的######
plot_ly(platform, labels = ~Var1, values = ~Freq, type = 'pie',textposition = 'outside',textinfo = 'label+percent') #####代码并没有画好这一张图，只是想强调一下plotly是个很厉害的东西


###########PCA图##########
###########我现在喜欢用DEseq包里的函数来画，因为自带标准化，后面也可以用ggplot来美化图片#######
library(DESeq2)
condition <- factor(group_list)
dds <- DESeqDataSetFromMatrix(RPF, DataFrame(condition), design= ~ condition )
dds
rld <- rlogTransformation(dds)
exprSet_new=assay(rld)
p<-plotPCA(rld, intgroup=c('condition'))
p+theme_classic(base_size = 12)+
  scale_colour_manual(values=c(cols))+
  ggsave( file='RPF-PCA.pdf', width=5, height=4)
pcaData <- plotPCA(rld, intgroup=c("condition"), returnData=TRUE)


#########cliProfiler，这个包挺呆的，但是反而画出了想要的效果，emmmmmmm#######
library(cliProfiler)
library(ChIPpeakAnno)
library(ggplot2)

shNC <- read.table('uniqueshNC.bed')
shTRA2A<-read.table('uniqueshTRA2A.bed')
peak<-rbind(shNC,shTRA2A)
write.table(peak, file = "peak.bed", sep = "\t", row.names = F, col.names = F, quote = F)
peak<-toGRanges('peak.bed',format=c('BED'))

peak$sample <- c(rep("shNC",nrow(shNC)), rep("shTRA2A", nrow(shTRA2A)))
meta<-metaGeneProfile(object = peak,annotation= 'gencode.v35.annotation.gff3',group = 'sample') #####这就是我说这个包呆的原因
meta[[2]] + ggtitle("Meta Profile")+
  theme(legend.position = "right")+
  theme_classic()+
  scale_color_manual(values = c("#0073C2FF", "#EFC000FF")) ######但优点是高度的可定制化

