####################MAXQUANT################
#######简单使用#####
使用方式，在图形化界面（my pc）选择好合适参数后，将mqpar.xml文件转移至linux服务器
手动改变mqpar.xml中需要分析的文件以及index文件的所属位置（MaxQuantCmd.exe --changeFolder会报错，不知道为什么，现在只能手动的去改）
然后 mono MaxQuant/bin/MaxQuantCmd.exe mqpar.xml（虽然官方推荐的是dotnet，但是使用dotnet的话会有一个非常诡异的版本报错问题，幸运的是mono可以作为替代）

######想要使用这个软件非常简单，但是想要通过使用这个软件来进行蛋白质组的定量则需要自己不断的去接受新的知识点，之后是我的笔记#####
######《The MaxQuant computational platform for mass spectrometry-based shotgun proteomics》这篇是个很好的学习资料######
首先对于我来说，对于蛋白质组的学习，主要是想能够分析captac的数据，用来验证我的index是有意义的，所以学习的主要方向是TMT11的定量方法。
TMT11的定量方法有点像m6A-seq2，就是把不同的样本标记以不同的离子，一次测得信号得强度，TMT11一次能测得11个样本得蛋白质组数据，方便了操作也降低了误差。
在图形界面选择MS2，TMT11，（MS3也有TMT11，两种不同的选择有什么区别？）
在sequence选项可以输入作为索引的fasta文件，除了蛋白质序列之外可以把常见污染物的序列合并在一起。
identification选项可以设置肽与蛋白match的FDR值（默认0.01），maxquant的搜库也是基于靶点诱饵库搜索策略所进行的，在advance选项可以对于诱饵进行设定，可以选择用靶点的反序或是乱序构建诱饵库。
之后就没有什么需要特别修改的了， parent ion tolerance在哪改？没找到

#####之后是结果文件#####
重要的首先是proteinGroups.txt，有对于蛋白组的定量描述
首先所谓的蛋白质group是什么，The proteome is characterized by a relatively high sequence redundancy. This results from different evolutionary processes and the presence of isoforms. In bottom-up proteomics, this situation leads to the problem that often a peptide cannot be uniquely associated with one protein of origin, which makes it impossible to unambiguously claim the presence of one protein over another.
Depending on the user-defined setting, the shared peptide will not be used for quantification (unique peptides only), or it will be used for the quantification of the protein group with a larger number of associated peptides (unique + razor peptides).
这里同时也解释了两种定量的选择（在Protein quantification选项），如果是unique peptides only则不会使用这些match到蛋白group的肽来定量，如果unique + razor peptides则相反。（用RNA-seq的思维来思考的话，unique + razor的道理是什么？）
可以看到蛋白名列有许多CON_抬头的名字，文章给出的解释是If any of the contaminants is found, it will be marked with the prefix ‘CON_’ in the MaxQuant output tables，（为什么我的index里没有污染物还输出了CON？可能是我点了includ？whatever）

定量有Reporter intensity corrected，Reporter intensity，Reporter intensity count，这分别是什么？
Reporter intensities come in two forms: the original ones and the ones for which the correction factors are applied. The columns referring to the letter one are indicated by the prefix ‘Corrected’
意思是，Reporter intensity corrected是应用了矫正因子的结果，（点解在我的结果里是一样咩？）
If your experiment involves isobaric labeling, such as iTRAQ and TMT, correction factors to account for mixing between channels can be specified. These are defined as a percentage of the total amount or as a percentage of the main isotope for iTRAQ and TMT labeling, respectively. The specific values for these correction factors may vary from batch to batch and are provided by the vendors of the labeling reagents
没理解错的话，我可以一定一个correction factors（how？what？文章也没说是多少啊）
ok,搞定了这里，correction factors的话可以在type选项编辑具体的离子标记label，至于correction factors的出处的话，可以在试剂盒的说明书上找到，虽然都是TMT10的试剂盒但是如果货号不同的话都会有差别，LSCC_Satpathy_Cell2021的话作者提供了correction factors（实验用到了两种不同货号的试剂盒，我还真不知道要填什么）

如果没理解错的话Reporter intensity corrected 1指的是126C呗，为什么不在表格里给出来呢

#####跑了两天没有跑出来，我把进程关了，是不是哪里有问题我在想######
我不知道这个FDR为什么算不出来，明明protocol里也没有花这么多时间，我能想到的问题就是污染物，maxquant是内置污染物的index的，如果我把污染物和蛋白的index合并在一起可以会造成混乱，后来我重新写了参数，使用了不包括污染物的index
但暂时还没有再跑一次，我只希望能够解决这个问题吧

把从ncbi得到的蛋白索引替换为了uniprot下载的非冗余蛋白索引，终于是得到了理想的运行速度，看来索引确实是一个比较重要的点吧


##############################OPENMS#####################
#######最近在学着使用OPENMS，maxquant来做定量的话，固然是好的，但是对于我的项目来说仅做量上的分析总感觉少了些什么，OPENMS是一个整合工具，或许能帮我做点什么

#先是文件转化
FileConverter -in 01CPTAC_LSCC_W_BI_20190615_KL_f01.raw -out 01CPTAC_LSCC_W_BI_20190615_KL_f01.mzML -ini ./FileConverter.ini 
#FileConverter.ini是一个参数文件，在此处主要是提供ThermoRaw_executable的位置，这行代码我是在maxquant环境里运行的，外环境好像缺少mono运行的相关软件。
#文件多的话写这个转化特别麻烦，下面是我在R上写的脚本
filecon<-matrix(data=NA, nrow = 23, ncol = 7)
filecon<-as.data.frame(filecon)
filecon[,1]<-c('FileConverter')
filecon[,2]<-c('-in')
filecon[,3]<-c(paste0('~/biodata/Satpathy_Cell2021/01CPTAC_LSCC_Proteome_BI_raw/01CPTAC_LSCC_W_BI_20190615_KL_f',sprintf("%02d", 3:25),'.raw'))#重点是这一句，我把1转化为了01这样
filecon[,4]<-c('-out')
filecon[,5]<-c(paste0('01CPTAC_LSCC_W_BI_20190615_KL_f',sprintf("%02d", 3:25),'.mzML'))
filecon[,6]<-c('-ini')
filecon[,7]<-c('./FileConverter.ini')
write.table(filecon,file = '~/share/whatever/test/FileConverter.sh',sep = ' ',row.names = F,col.names = F,quote = F)


#合并文件
FileMerger -in *mzML -in_type mzML -out 01CPTAC_LSCC_W_BI.mzML

#这似乎对于TMT来说是必要的
Resampler -in 01CPTAC_LSCC_W_BI.mzML -out 01CPTAC_LSCC_W_BI_resampler.mzML -threads 6

#降噪
NoiseFilterGaussian -in 01CPTAC_LSCC_W_BI.mzML -out 01CPTAC_LSCC_W_BI_filter.mzML -threads 6
BaselineFilter -in 01CPTAC_LSCC_W_BI_filter.mzML -out 01CPTAC_LSCC_W_BI_filter2.mzML -threads 6
PeakPickerHiRes -in 01CPTAC_LSCC_W_BI_filter2.mzML -out 01CPTAC_LSCC_W_BI_filter3.mzML -threads 6

#排序
FileFilter 

#MSGFPlus，在外环境运行的
MSGFPlusAdapter -in 01CPTAC_LSCC_W_BI_filter3.mzML -out 01CPTAC_LSCC_W_BI_filter.idXML -database ~/biodata/index/protein/ncRNA-coding/NEW_fourway_filter-ADDVariant.fasta -threads 6 -ini MSGFPlusAdapter.ini

#定量
IsobaricAnalyzer

#整合MSGplus和定量的结果（整合之前应该做基于FDR值的过滤等步骤）
IDMapper

#最后计算丰度什么的
ProteinQuantifier


